pipeline {
    agent any

    environment {
        NODEJS_VERSION = 'node-18'
        TEST_PIPELINE = 'SSAFT_TEST_PIPELINE'
        SSH_CREDENTIALS_ID = 'azure_vm_key'
        APP_REPO_URL = 'https://github.com/AzizSoftware/SSAFT_DEPLOYMENT_PIPELINE.git'
    }

    tools {
        nodejs "${env.NODEJS_VERSION}"
    }

    stages {
        stage('Checkout Repo') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'main']],
                        userRemoteConfigs: [[url: env.APP_REPO_URL, credentialsId: 'github-pat-azizsoftware']],
                        doNotPoll: true
                    ])
                    echo "Listing contents after checkout:"
                    sh 'pwd'
                    sh 'ls -lR'
                }
            }
        }

        stage('Bump Version and Push') {
            steps {
                script {
                    def updatedModules = [
                        'SSATF/Services/TransactionGenerationAPI',
                        'SSATF/Services/DataAnalyserService',
                        'SSATF/Client_UI'
                    ]

                    updatedModules.each { modulePath ->
                        def pkgPath = "${modulePath}/package.json"
                        def json = readJSON file: pkgPath
                        def versionParts = json.version.tokenize('.')
                        versionParts[2] = (versionParts[2] as int) + 1
                        json.version = versionParts.join('.')
                        def newVersion = json.version
                        writeJSON file: pkgPath, json: json, pretty: 4

                        echo "üîÅ Version bumped to ${newVersion} in ${modulePath}"

                        // Commit & Push the bump on new branch
                        sh """
                            cd ${modulePath}
                            git config user.email "jenkins@azizsoftware.com"
                            git config user.name "Jenkins CI"
                            git checkout -b updated-version-${newVersion}
                            git add package.json
                            git commit -m "üîº Bump version to ${newVersion}"
                            git push origin updated-version-${newVersion}
                            cd -
                        """
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "Installing dependencies in subprojects..."

                dir('SSATF/Services/DataAnalyserService') {
                    echo "Installing in DataAnalyserService"
                    sh 'npm install'
                }

                dir('SSATF/Services/TransactionGenerationAPI') {
                    echo "Installing in TransactionGenerationAPI"
                    sh 'npm install'
                }

                dir('SSATF/Client_UI') {
                    echo "Installing in Client_UI"
                    sh 'npm install'
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ CI pipeline succeeded. Triggering Test Pipeline..."
            build job: "${env.TEST_PIPELINE}", wait: true
        }

        failure {
            echo "‚ùå CI pipeline failed. Aborting further steps."
        }
    }
}
