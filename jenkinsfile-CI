pipeline {
    agent any

    environment {
        NODEJS_VERSION = 'node-18'
        TEST_PIPELINE = 'SSAFT_TEST_PIPELINE'
        SSH_CREDENTIALS_ID = 'azure_vm_key'
        APP_REPO_URL = 'https://github.com/AzizSoftware/SSAFT_DEPLOYMENT_PIPELINE.git'
    }

    tools {
        nodejs "${env.NODEJS_VERSION}"
    }

    stages {
        stage('Checkout Repo') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'main']],
                        userRemoteConfigs: [[
                            url: env.APP_REPO_URL,
                            credentialsId: 'github-pat-azizsoftware'
                        ]],
                        doNotPoll: true
                    ])
                    echo "Listing contents after checkout:"
                    sh 'pwd'
                    sh 'ls -lR'
                }
            }
        }

        stage('Bump Version and Push') {
    steps {
        script {
            def pkgPath = 'SSATF/Client_UI/package.json'
            def json = readJSON file: pkgPath

            // Extraire version et bumper le patch
            def versionParts = json.version.tokenize('.')
            versionParts[2] = (versionParts[2] as int) + 1
            def newVersion = versionParts.join('.')

            json.version = newVersion
            writeJSON file: pkgPath, json: json, pretty: 4

            // Construire le nom de branche
            def branchName = "Upgraded-branch-${newVersion}"
            env.UPGRADE_BRANCH_NAME = branchName

            echo "üìå New branch will be: ${branchName}"

            withCredentials([usernamePassword(
                credentialsId: '4a0363b8-3a92-4661-9c34-18f42434b7e7',
                usernameVariable: 'GIT_USER',
                passwordVariable: 'GIT_TOKEN'
            )]) {
                sh """
                    git config user.email "jenkins@azizsoftware.com"
                    git config user.name "Jenkins CI"

                    git checkout main || true
                    git pull

                    git checkout -b ${branchName}
                    git add ${pkgPath}
                    git commit -m "üîº Bump version to ${newVersion}"
                    git push https://${GIT_USER}:${GIT_TOKEN}@github.com/AzizSoftware/SSAFT_DEPLOYMENT_PIPELINE.git ${branchName}
                """
            }
        }
    }
}

        stage('Install Dependencies') {
            steps {
                echo "Installing dependencies in subprojects..."

                dir('SSATF/Services/DataAnalyserService') {
                    echo "Installing in DataAnalyserService"
                    sh 'npm install'
                }

                dir('SSATF/Services/TransactionGenerationAPI') {
                    echo "Installing in TransactionGenerationAPI"
                    sh 'npm install'
                }

                dir('SSATF/Client_UI') {
                    echo "Installing in Client_UI"
                    sh 'npm install'
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ CI pipeline succeeded. Triggering Test Pipeline..."
            build job: "${env.TEST_PIPELINE}", wait: true
        }
        failure {
            echo "‚ùå CI pipeline failed. Aborting further steps."
        }
    }
}
