pipeline {
    agent any

    environment {
        NODEJS_VERSION = 'node-18'  // Make sure this NodeJS version is installed via the plugin
        TEST_PIPELINE = 'SSAFT_TEST_PIPELINE' // Exact Jenkins job name for tests (Trivy, etc.)
        SSH_CREDENTIALS_ID = 'azure_vm_key' // Jenkins SSH credentials ID
        APP_REPO_URL = 'https://github.com/AzizSoftware/SSAFT_DEPLOYMENT_PIPELINE.git'
    }

    tools {
        nodejs "${env.NODEJS_VERSION}"
    }

    stages {
        stage('Checkout Repo') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'main']],
                        userRemoteConfigs: [[url: env.APP_REPO_URL, credentialsId: 'github-pat-azizsoftware']],
                        doNotPoll: true
                    ])
                    echo "Listing contents after checkout:"
                    sh 'pwd'
                    sh 'ls -lR'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "Installing dependencies in subprojects..."

                dir('SSATF/Services/DataAnalyserService') {
                    echo "Installing in DataAnalyserService"
                    sh 'npm install'
                }

                dir('SSATF/Services/TransactionGenerationAPI') {
                    echo "Installing in TransactionGenerationAPI"
                    sh 'npm install'
                }

                dir('SSATF/Client_UI') {
                    echo "Installing in Client_UI"
                    sh 'npm install'
                }
            }
        }

        

        stage('Build') {
            steps {
                echo "Building subprojects..."

                dir('SSATF/Services/DataAnalyserService') {
                    sh 'npm run build'
                }

                dir('SSATF/Services/TransactionGenerationAPI') {
                    sh 'npm run build'
                }

                dir('SSATF/Client_UI') {
                    sh 'npm run build'
                }
            }
        }
    }

    post {
        success {
            echo "CI pipeline succeeded. Triggering Test Pipeline..."
            build job: "${env.TEST_PIPELINE}", wait: true
        }

        failure {
            echo "CI pipeline failed. Aborting further steps."
        }
    }
}
