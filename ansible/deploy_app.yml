---
- name: Deploy Microservice Application
  hosts: webservers
  become: yes

  vars:
    app_repo_url: "{{ lookup('env', 'APP_REPO_URL') or 'https://github.com/AzizSoftware/SSAFT_DEPLOYMENT_PIPELINE.git' }}"
    app_dir_on_vm: "/home/azureuser/my-microservice-app"
    docker_compose_file: "{{ app_dir_on_vm }}/docker-compose.yml"

  tasks:
    - name: Wait for SSH connection and cloud-init to finish (up to 300 seconds)
      ansible.builtin.wait_for_connection:
        delay: 10
        timeout: 300
        sleep: 10

    - name: Ensure git is installed
      ansible.builtin.apt:
        name: git
        state: present
        update_cache: yes

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install dependencies for Docker
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker_gpg.key
        mode: '0644'

    - name: Add Docker GPG key to /usr/share/keyrings/
      ansible.builtin.shell: |
        gpg --dearmor < /tmp/docker_gpg.key > /usr/share/keyrings/docker-archive-keyring.gpg
        chmod a+r /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        warn: false
        creates: /usr/share/keyrings/docker-archive-keyring.gpg
      become: yes

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker Engine and Docker Compose Plugin
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Ensure Docker service is running and enabled
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Check if azureuser is already in docker group
      ansible.builtin.shell: groups azureuser | grep -q docker
      register: docker_group_check
      changed_when: false
      failed_when: false

    - name: Add azureuser to docker group if not already present
      ansible.builtin.shell: usermod -aG docker azureuser
      args:
        warn: false
      when: docker_group_check.rc != 0
      notify: Reload ssh connection

    - name: Ensure application directory exists
      ansible.builtin.file:
        path: "{{ app_dir_on_vm }}"
        state: directory
        owner: azureuser
        group: azureuser
        mode: '0755'

    - name: Clone or pull application repository
      ansible.builtin.git:
        repo: "{{ app_repo_url }}"
        dest: "{{ app_dir_on_vm }}"
        version: main
        accept_hostkey: yes
        force: yes
      become_user: azureuser

    - name: Fix permissions for app directory
      ansible.builtin.file:
        path: "{{ app_dir_on_vm }}"
        state: directory
        owner: azureuser
        group: azureuser
        recurse: yes
        mode: '0755'

    - name: Ensure Docker SDK for Python is installed
      ansible.builtin.apt:
        name: python3-docker
        state: present
        update_cache: yes

    - name: Ensure docker-compose Python module is installed
      ansible.builtin.pip:
        name: docker-compose
        executable: pip3

    - name: Build and bring up Docker Compose services
      community.docker.docker_compose:
        project_src: "{{ app_dir_on_vm }}"
        files:
          - docker-compose.yml
        build: yes
        state: present

  handlers:
    - name: Reload ssh connection
      meta: reset_connection
